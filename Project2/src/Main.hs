module Main (main) where


import Data.List (unfoldr)
import Data.Maybe (listToMaybe)

main :: IO ()
main = do
  putStrLn "hello world"


{-
Визначте вказанi функцiї в кожному з завдань: а) без застосування, б) з
застосуванням вбудованих функцiй вищого порядку.


1.12 Роздiлити список на двi частини при заданiй довжинi першої n, напр.
при n=3: "abcdefghik"⇒ ("abc "defghik")

2.12 Перевiрити гiпотезу Ґольдбаха у вказаному дiапазонi.

-}


-- 1.12 ----------------------------------------------------------------------------------------------------------------


-- | Фунція для розбиття списку на дві частини при заданому індексу розбиття -- n
-- | без використання ФВП
-- >> splitN 3 "abcdefghj"
-- > ("abc","defghj")
--
-- >> splitN 3 [0..9]
-- > ([0,1,2],[3,4,5,6,7,8,9])
splitN :: Int -> [a] -> ([a], [a])
splitN n list = splitAt n list

-- | Фунція для розбиття списку на дві частини при заданому індексу розбиття -- n
-- | з використанням вбудовинх фцнкцій take та drop
-- | без використання ФВП
-- >> spN 3 "abcdefghj"
-- > ("abc","defghj")
--
-- >> spN 3 [0..9]
-- > ([0,1,2],[3,4,5,6,7,8,9])
spN n xs = (take n xs, drop n xs)


-- | Фунція для індексування списку
-- | з використанням вбудовинх фцнкцій take та drop
-- >> index "abcdefghj"
-- > [('a',1),('b',2),('c',3),('d',4),('e',5),('f',6),('g',7),('h',8),('j',9)]
index :: [a] -> [(a, Int)]
index ls = zip ls [1..length ls]

-- | Фунція для деіндексування списку
-- | з використанням вбудовинх фцнкцій take та drop
-- >> deindex [('a',1),('b',2),('c',3),('d',4),('e',5),('f',6),('g',7),('h',8),('j',9)]
-- > "abcdefghj"
deindex :: [(a, Int)] -> [a]
deindex [] = []
deindex ((i,x):xs) = i : deindex xs


-- | Фунція для створення списку з перших n елементів заданого списку
-- >> take_ 4 "abcdefghj"
-- > "abcd"
take_ :: Int -> [a] -> [a]
take_ k _
    | k <= 0 = []
take_ _ [] = []
take_ n list = deindex (takeWhile (\ (x,y) -> y <= n) (index list))


-- | Фунція для створення списку з усіх після n перших елементів заданого списку
-- >> drop_ 4 "abcdefghj"
-- > "efghj"
drop_ :: Int -> [a] -> [a]
drop_ k _
    | k <= 0 = []
drop_ _ [] = []
drop_ n list = deindex (dropWhile (\ (x,y) -> y <= n) (index list))


-- | Фунція для розбиття списку на дві частини при заданому індексу розбиття -- n
-- | з використання ФВП
-- >> spN2 3 "abcdefghj"
-- > ("abc","defghj")
--
-- >> spN2 3 [0..9]
-- > ([0,1,2],[3,4,5,6,7,8,9])
spN2 n xs = (take_ n xs, drop_ n xs)



-- 2.12 ----------------------------------------------------------------------------------------------------------------
